using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class InvulnerabilityAnimation : MonoBehaviour {
    private bool _isInvulnerability = false;
    private float _timer;

    [SerializeField]
    private List<SpriteRenderer> _sprites = new List<SpriteRenderer>();
    [SerializeField]
    private float _delayBllinkAnimationInSeconds;
    [SerializeField]
    private float _timeAnimation;

    public bool IsInvulnerability { get => _isInvulnerability; }


    public void StartBlinkGameObhectsAnimation() {
        _isInvulnerability = true;
        _timer = _timeAnimation;
        StartCoroutine(StartTheCountdownToEndAnimation(_timer));
        StartCoroutine(BlinkGameObjectsAnimation());
    }

    public IEnumerator BlinkGameObjectsAnimation() {
        while (_isInvulnerability) {
            yield return new WaitForSeconds(_delayBllinkAnimationInSeconds);
            SetSpritesAlpha(0);
            yield return new WaitForSeconds(_delayBllinkAnimationInSeconds);
            SetSpritesAlpha(255);
        }
    }

    private IEnumerator StartTheCountdownToEndAnimation(float timeAnimation) {
        while (_isInvulnerability) {
            timeAnimation -= Time.deltaTime;

            if (timeAnimation <= 0) {
                _isInvulnerability = !_isInvulnerability;
            }
            yield return null;
        }
    }

    private void SetSpritesAlpha(float alpha) {
        foreach (var element in _sprites) {
            element.color = new Color(255f, 255f, 255f, alpha);
        }
    }
}
