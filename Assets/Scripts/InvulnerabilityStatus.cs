using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class InvulnerabilityStatus : MonoBehaviour {
    private float _timer;

    [SerializeField]
    private List<SpriteRenderer> _sprites = new List<SpriteRenderer>();
    [SerializeField]
    private float _delayBllinkAnimationInSeconds;
    [SerializeField]
    private float _timeAnimation;

    public bool IsInvulnerability { get; private set; }

    private void Awake() {
        IsInvulnerability = false;
    }

    public void PlayBlinkAnimation() {
        IsInvulnerability = true;
        _timer = _timeAnimation;
        StartCoroutine(StartTheCountdownToEndAnimation(_timer));
        StartCoroutine(BlinkAnimation());
    }

    private IEnumerator StartTheCountdownToEndAnimation(float timeAnimation) {
        while (IsInvulnerability) {
            timeAnimation -= Time.deltaTime;

            if (timeAnimation <= 0) {
                IsInvulnerability = !IsInvulnerability;
            }
            yield return null;
        }
    }

    public IEnumerator BlinkAnimation() {
        while (IsInvulnerability) {
            yield return new WaitForSeconds(_delayBllinkAnimationInSeconds);
            SetSpritesAlpha(0);
            yield return new WaitForSeconds(_delayBllinkAnimationInSeconds);
            SetSpritesAlpha(255);
        }

        IsInvulnerability = false;
    }

    private void SetSpritesAlpha(float alpha) {
        foreach (var element in _sprites) {
            element.color = new Color(255f, 255f, 255f, alpha);
        }
    }
}
